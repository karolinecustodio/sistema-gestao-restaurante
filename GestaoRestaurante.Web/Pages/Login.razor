@page "/login"
@inject IUsuarioService usuarioService
@inject UsuarioLogado UsuarioLogado

@if (usuario == null && MensagemErro is null)
{
    <ExibirSpinner />
}
else
{
    <div class="container bg-light">
        <div class="row justify-content-center">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">Login</div>
                    <div class="card-body">
                        <form>
                            <div class="form-group">
                                <label for="email">E-mail:</label>
                                <input type="text" class="form-control" id="email" placeholder="Digite seu email" @bind="usuario.Email">
                            </div>
                            <div class="form-group">
                                <label for="senha">Senha:</label>
                                <input type="password" class="form-control" id="senha" placeholder="Digite sua senha" @bind="usuario.Senha">
                            </div>
                            <button type="submit" class="btn btn-primary" @onclick:preventDefault @onclick="Entrar_Click">
                                Entrar
                            </button>
                            <div style="display: flex; justify-content: space-between;">
                                    <span>
                                        <a href="/cria-conta">Não tem uma conta?</a>
                                    </span>
                                    <span>
                                        <a href="/altera-senha">Esqueceu a senha?</a>
                                    </span>
                            </div>
                        </form>
                        @if (MensagemErro is not null)
                        {
                            <div class="alert alert-danger" role="alert">
                                @MensagemErro
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

}
@code {

    public int usuarioId { get; set; }
    public UsuarioDto usuario { get; set; }

    public string? MensagemErro { get; set; }

    [Inject]
    public IUsuarioService? UsuarioService { get; set; }

    [Inject]
    public NavigationManager? NavigationManager { get; set; }

    [Inject]
    public IGerenciaUsuarioEnderecoLocalStorageService GerenciaUsuarioEnderecoService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        usuario = new UsuarioDto();
    }

    protected async Task Entrar_Click()
    {
        try
        {
            var usuarioExiste = await VerificarSeUsuarioExiste(usuario);

            if (usuarioExiste)
            {
                await UsuarioLogado.SalvarIdUsuario(usuarioId,GerenciaUsuarioEnderecoService);

                NavigationManager.NavigateTo("/endereco");
            }
            else
            {
                MensagemErro = "Usuário não encontrado. Por favor, verifique suas credenciais.";
            }
        }
        catch (Exception ex)
        {
            MensagemErro = "Usuário não encontrado. Por favor, verifique suas credenciais.";
            Console.WriteLine($"Erro ao tentar fazer login: {ex.Message}");
        }
    }

    private async Task<bool> VerificarSeUsuarioExiste(UsuarioDto usuarioDto)
    {
        var usuarioEmailExiste = await UsuarioService.GetByEmailSenhaUsuario(usuarioDto.Email, usuarioDto.Senha);
        usuarioId = usuarioEmailExiste.Id;
        if (usuarioEmailExiste != null)
            return true;
        else
        {
            return false;
        }
    }
}
